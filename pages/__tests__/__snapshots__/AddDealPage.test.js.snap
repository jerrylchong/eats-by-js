// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RNCSafeAreaView
  onInsetsChange={[Function]}
  style={
    Object {
      "flex": 1,
    }
  }
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Array [
        Object {
          "alignItems": "center",
          "backgroundColor": "#fff",
          "flex": 1,
          "flexDirection": "column",
          "minHeight": 1334,
        },
        Object {
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        },
      ]
    }
  >
    <View
      accessibilityIgnoresInvertColors={true}
      style={
        Object {
          "bottom": 0,
          "height": 327.33812949640287,
          "position": "absolute",
          "width": "100%",
        }
      }
    >
      <Image
        source={1}
        style={
          Array [
            Object {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 0,
            },
            Object {
              "height": 327.33812949640287,
              "width": "100%",
            },
            undefined,
          ]
        }
      />
    </View>
    <View
      style={
        Object {
          "alignSelf": "flex-start",
          "margin": "2%",
        }
      }
    >
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "height": 75,
            "justifyContent": "center",
            "opacity": 1,
            "width": 75,
          }
        }
      >
        <Image
          source={1}
          style={
            Object {
              "height": 13,
              "width": 15,
            }
          }
        />
      </View>
    </View>
    <Text
      style={
        Object {
          "alignSelf": "center",
          "fontFamily": "Ubuntu-Medium",
          "fontSize": 20,
        }
      }
    >
      Add a Deal
    </Text>
    <View
      onLayout={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "height": "28%",
            "justifyContent": "space-between",
            "position": "relative",
            "top": "20%",
            "width": "80%",
          },
          Object {
            "paddingBottom": 0,
          },
        ]
      }
    >
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Title"
        placeholderTextColor="#404040"
        rejectResponderTermination={true}
        style={
          Object {
            "backgroundColor": "#d9d9d9",
            "borderRadius": 262.5,
            "color": "#404040",
            "fontFamily": "Ubuntu",
            "fontSize": 12,
            "fontWeight": "normal",
            "height": 82.5,
            "paddingHorizontal": "5%",
            "width": 600,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Description"
        placeholderTextColor="#404040"
        rejectResponderTermination={true}
        style={
          Object {
            "backgroundColor": "#d9d9d9",
            "borderRadius": 262.5,
            "color": "#404040",
            "fontFamily": "Ubuntu",
            "fontSize": 12,
            "fontWeight": "normal",
            "height": 82.5,
            "paddingHorizontal": "5%",
            "width": 600,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#404040",
              "fontFamily": "Ubuntu",
              "fontSize": 12,
            }
          }
        >
          Start Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "width": 142,
              },
              Object {
                "width": 200,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#aaa",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 36,
                  },
                  false,
                  false,
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Array [
                    Object {
                      "color": "#333",
                    },
                    undefined,
                  ]
                }
              >
                2020-07-26
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#00000077",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        pointerEvents="auto"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopColor": "#ccc",
                                "borderTopWidth": 1,
                                "marginTop": 42,
                              },
                              undefined,
                            ]
                          }
                        >
                          <RCTDatePicker
                            date={1595752106714}
                            mode="date"
                            onChange={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "height": 216,
                              }
                            }
                            timeZoneOffsetInMinutes={null}
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "paddingHorizontal": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "left": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          allowFontScaling={true}
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              Object {
                                "color": "#666",
                              },
                              undefined,
                            ]
                          }
                        >
                          Cancel
                        </Text>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "paddingHorizontal": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "right": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          allowFontScaling={true}
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              undefined,
                            ]
                          }
                        >
                          Confirm
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#404040",
              "fontFamily": "Ubuntu",
              "fontSize": 12,
            }
          }
        >
          End Date
        </Text>
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "width": 142,
              },
              Object {
                "width": 200,
              },
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "height": 40,
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                Array [
                  Object {
                    "alignItems": "center",
                    "borderColor": "#aaa",
                    "borderWidth": 1,
                    "flex": 1,
                    "height": 40,
                    "justifyContent": "center",
                  },
                  Object {
                    "marginLeft": 36,
                  },
                  false,
                  false,
                ]
              }
            >
              <Text
                allowFontScaling={true}
                style={
                  Array [
                    Object {
                      "color": "#333",
                    },
                    undefined,
                  ]
                }
              >
                2020-07-26
              </Text>
            </View>
            <Modal
              animationType="none"
              hardwareAccelerated={false}
              onRequestClose={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "portrait-upside-down",
                  "landscape",
                  "landscape-left",
                  "landscape-right",
                ]
              }
              transparent={true}
              visible={false}
            >
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              >
                <View
                  accessible={true}
                  focusable={true}
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "alignItems": "flex-end",
                      "backgroundColor": "#00000077",
                      "flex": 1,
                      "flexDirection": "row",
                    }
                  }
                >
                  <View
                    accessible={true}
                    focusable={false}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "flex": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Object {
                          "backgroundColor": "#fff",
                          "height": 0,
                          "overflow": "hidden",
                        }
                      }
                    >
                      <View
                        pointerEvents="auto"
                      >
                        <View
                          style={
                            Array [
                              Object {
                                "borderTopColor": "#ccc",
                                "borderTopWidth": 1,
                                "marginTop": 42,
                              },
                              undefined,
                            ]
                          }
                        >
                          <RCTDatePicker
                            date={1595752106714}
                            mode="date"
                            onChange={[Function]}
                            onResponderTerminationRequest={[Function]}
                            onStartShouldSetResponder={[Function]}
                            style={
                              Object {
                                "height": 216,
                              }
                            }
                            timeZoneOffsetInMinutes={null}
                          />
                        </View>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "paddingHorizontal": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "left": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          allowFontScaling={true}
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              Object {
                                "color": "#666",
                              },
                              undefined,
                            ]
                          }
                        >
                          Cancel
                        </Text>
                      </View>
                      <View
                        accessible={true}
                        focusable={true}
                        isTVSelectable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Array [
                            Object {
                              "alignItems": "center",
                              "flexDirection": "row",
                              "height": 42,
                              "justifyContent": "center",
                              "paddingHorizontal": 20,
                              "position": "absolute",
                              "top": 0,
                            },
                            Object {
                              "right": 0,
                            },
                            undefined,
                          ]
                        }
                      >
                        <Text
                          allowFontScaling={true}
                          style={
                            Array [
                              Object {
                                "color": "#46cf98",
                                "fontSize": 16,
                              },
                              undefined,
                            ]
                          }
                        >
                          Confirm
                        </Text>
                      </View>
                    </View>
                  </View>
                </View>
              </View>
            </Modal>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": "15%",
          "justifyContent": "space-evenly",
          "position": "relative",
          "top": "60%",
          "width": "100%",
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#ff6961",
            "borderRadius": 20,
            "elevation": 5,
            "height": "30%",
            "shadowColor": "#000",
            "shadowOffset": Object {
              "height": 2,
              "width": 0,
            },
            "shadowOpacity": 0.25,
            "shadowRadius": 3.84,
            "width": "25%",
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "height": "100%",
              "justifyContent": "center",
              "opacity": 1,
              "paddingHorizontal": 20,
              "paddingVertical": 3,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              Object {
                "color": "white",
                "fontFamily": "Ubuntu",
                "fontSize": 12,
              }
            }
          >
            Submit
          </Text>
        </View>
      </View>
    </View>
  </View>
</RNCSafeAreaView>
`;
